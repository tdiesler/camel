<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more
    contributor license agreements.  See the NOTICE file distributed with
    this work for additional information regarding copyright ownership.
    The ASF licenses this file to You under the Apache License, Version 2.0
    (the "License"); you may not use this file except in compliance with
    the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.apache.camel</groupId>
        <artifactId>examples</artifactId>
        <version>2.x-fuse-SNAPSHOT</version>
    </parent>

    <artifactId>camel-example-reportincident</artifactId>
    <name>Camel :: Example :: Report Incident</name>
    <description>An example based on real life use case for reporting incidents using webservice that are transformed
        and send as emails to a backing system
    </description>
    <packaging>war</packaging>
    
    <repositories>
    <repository>
      <id>ops4j.releases</id>
      <url>http://repository.ops4j.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>ops4j.snapshots</id>
      <url>http://repository.ops4j.org/mvn-snapshots</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>biz.aQute</id>
      <url>http://www.aqute.biz/repo</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>ops4j.releases</id>
      <url>http://repository.ops4j.org/maven2</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
   </pluginRepositories>

	<properties>
		<pax-exam-version>0.6.0</pax-exam-version>
		<pax-tiny-bundle-version>1.0.0</pax-tiny-bundle-version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-core</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-spring</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-velocity</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-mail</artifactId>
		</dependency>

		<!-- cxf -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-core</artifactId>
			<version>${cxf-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxws</artifactId>
			<version>${cxf-version}</version>
		</dependency>

		<!-- regular http transport -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf-version}</version>
		</dependency>

		<!-- logging -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.14</version>
		</dependency>

		<!-- cxf web container for unit testing -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http-jetty</artifactId>
			<version>${cxf-version}</version>
		</dependency>

		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam</artifactId>
			<version>${pax-exam-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit</artifactId>
			<version>${pax-exam-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-container-default</artifactId>
			<version>${pax-exam-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.ops4j.pax.exam</groupId>
			<artifactId>pax-exam-junit-extender-impl</artifactId>
			<version>${pax-exam-version}</version>
			<scope>test</scope>
		</dependency>
	    <dependency>
		   <groupId>org.ops4j.pax.swissbox</groupId>
		   <artifactId>pax-swissbox-tinybundles</artifactId>
		   <version>1.0.0</version>
		   <scope>test</scope>
        </dependency>
		<dependency>
			<groupId>org.apache.camel.karaf</groupId>
			<artifactId>features</artifactId>
			<version>${version}</version>
			<type>pom</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-osgi</artifactId>
			<scope>test</scope>
		</dependency>
	    <dependency>
		    <groupId>org.apache.camel.tests</groupId>
		    <artifactId>org.apache.camel.tests.mock-javamail_1.7</artifactId>
		    <scope>test</scope>
	    </dependency>
	</dependencies>

    <build>
        <plugins>

            <!-- to compile with 1.5 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
            
	        <plugin>
	            <groupId>org.apache.servicemix.tooling</groupId>
	            <artifactId>depends-maven-plugin</artifactId>
	            <executions>
		            <execution>
			            <id>generate-depends-file</id>
			            <goals>
				            <goal>generate-depends-file</goal>
			            </goals>
	                </execution>
	            </executions>
            </plugin>
 
            <!-- CXF wsdl2java generator, will plugin to the compile goal -->
            <plugin>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-codegen-plugin</artifactId>
                <version>${cxf-version}</version>
                <executions>
                    <execution>
                        <id>generate-sources</id>
                        <phase>generate-sources</phase>
                        <configuration>
                            <sourceRoot>${basedir}/target/generated/src/main/java</sourceRoot>
                            <wsdlOptions>
                                <wsdlOption>
                                    <wsdl>${basedir}/src/main/resources/etc/report_incident.wsdl</wsdl>
                                </wsdlOption>
                            </wsdlOptions>
                        </configuration>
                        <goals>
                            <goal>wsdl2java</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- so we can run mvn jetty:run -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <version>${jetty-version}</version>
                <configuration>
                   <connectors>
                      <connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
                        <port>9080</port>
                        <maxIdleTime>60000</maxIdleTime>
                      </connector>
                   </connectors>                   
                </configuration>
            </plugin>

	        <plugin>
		         <artifactId>maven-surefire-plugin</artifactId>
		         <configuration>
			        <excludes>
				      <!-- TODO: temporary disable unit test to let TC not hang -->
				      <exclude>**/*OSGiTest.*</exclude>
			        </excludes>
		         </configuration>
	         </plugin>

        </plugins>
    </build>

</project>
